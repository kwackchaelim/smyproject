/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-10-16 19:39:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.boarddemo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class smyboard_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>게시판 등록</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"smyboard.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t\t// window.load는 페이지 로딩 후 실행\r\n");
      out.write("\t\twindow.onload = function() {\r\n");
      out.write("\t\t\tvar action = document.form1.action.value;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(action==\"edit\") {\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"insert\").disabled=true;\r\n");
      out.write("\t\t\t\t// document.getElementById(\"update\").disabled=false;\r\n");
      out.write("\t\t\t\t// document.getElementById(\"delete\").disabled=false;\r\n");
      out.write("\t\t\t} else if(action==\"add\") {\r\n");
      out.write("\t\t\t\t// document.getElementById(\"insert\").disabled=false;\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"update\").disabled=true;\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"delete\").disabled=true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\r\n");
      out.write("\t\tfunction insertcheck() {\r\n");
      out.write("\t\t\t// post방식\r\n");
      out.write("\t\t\tdocument.form1.action.value=\"insert\";\r\n");
      out.write("\t\t\tdocument.form1.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tfunction updatecheck() {\r\n");
      out.write("\t\t\t// post방식\r\n");
      out.write("\t\t\tdocument.form1.action.value=\"update\";\r\n");
      out.write("\t\t\tdocument.form1.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tfunction deletecheck() {\r\n");
      out.write("\t\t\tresult = confirm(\"정말로 삭제하시겠습니까 ?\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tif(result == true){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// post방식\r\n");
      out.write("\t\t\t\tdocument.form1.action.value=\"delete\";\r\n");
      out.write("\t\t\t\tdocument.form1.submit();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      org.smy.board.smyboardDTO smyboardDTO = null;
      smyboardDTO = (org.smy.board.smyboardDTO) _jspx_page_context.getAttribute("smyboardDTO", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (smyboardDTO == null){
        smyboardDTO = new org.smy.board.smyboardDTO();
        _jspx_page_context.setAttribute("smyboardDTO", smyboardDTO, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t<H2>게시판 등록</H2>\r\n");
      out.write("\t<HR>\r\n");
      out.write("\t\r\n");
      out.write("\t<a href=\"board_control.jsp?action=list\">게시판목록 조회</a>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 게시판 등록용 -->\r\n");
      out.write("\t<form name=\"form1\" method=\"post\" action=smyboard_control.jsp>\r\n");
      out.write("\t\r\n");
      out.write("\t\t");


			// action구분 등 파라메터(add 또는 edit)
			String action = request.getParameter("action");
			
			// action이 add이면 값 초기화
			if(action.equals("add")) {
				smyboardDTO.setUserName("");
				smyboardDTO.setTitle("");
				smyboardDTO.setContent("");
			}
		
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"action\" value=\"");
      out.print( action );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print( smyboardDTO.getId() );
      out.write("\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>성명</th>\r\n");
      out.write("\t\t\t\t<td><input type=text size=20 name=userName value=\"");
      out.print( smyboardDTO.getUserName() );
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t<td><input type=text size=20 name=title value=\"");
      out.print( smyboardDTO.getTitle() );
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t\t<td><input type=text size=100 name=content value=\"");
      out.print( smyboardDTO.getContent() );
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=2 align=center>\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" id=\"insert\" value=\"입력\" onClick=\"insertcheck()\">\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" id=\"update\" value=\"수정\" onClick=\"updatecheck()\">\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" id=\"delete\" value=\"삭제\" onClick=\"deletecheck()\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
