/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-10-16 21:17:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.boarddemo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.smy.board.*;
import java.util.ArrayList;

public final class smyboard_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.smy.board");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>게시판 조회</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"smyboard.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t/**\r\n");
      out.write("\t* @fn\t\tretrivalcheck()\r\n");
      out.write("\t*\r\n");
      out.write("\t* @brief \tClick action control 전달을 위한 선언\r\n");
      out.write("\t*\r\n");
      out.write("\t* @author \t김설규\r\n");
      out.write("\t* @date \t2019-10-16\r\n");
      out.write("\t*\r\n");
      out.write("\t* @param \tlist\r\n");
      out.write("\t*\r\n");
      out.write("\t* @remark \tClick action control 전달을 위한 선언\t[2019-10-16; 김설규]\r\n");
      out.write("\t* \r\n");
      out.write("\t*/\r\n");
      out.write("\t\tfunction retrivalcheck() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.form1.action.value=\"list\";\r\n");
      out.write("\t\t\tdocument.form1.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* @fn\t\teditcheck(id)\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t* @brief \tClick action control 전달을 위한 선언\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t* @author \t김설규\r\n");
      out.write("\t\t* @date \t2019-10-16\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t* @param \tedit\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t* @remark \tClick action control 전달을 위한 선언\t[2019-10-16; 김설규]\r\n");
      out.write("\t\t* \r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\tfunction editcheck(id) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tdocument.form1.action.value=\"edit\";\r\n");
      out.write("\t\t\tdocument.form1.id.value=id;\r\n");
      out.write("\t\t\tdocument.form1.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      java.util.ArrayList boardList = null;
      boardList = (java.util.ArrayList) _jspx_page_context.getAttribute("boardList", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (boardList == null){
        boardList = new java.util.ArrayList();
        _jspx_page_context.setAttribute("boardList", boardList, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div align=center>\r\n");
      out.write("\t<H3>게시판 조회</H3>\r\n");
      out.write("\t<HR>\r\n");
      out.write("\t<a href=\"smyboard_control.jsp?action=add\">게시판 등록</a><BR>\r\n");
      out.write("\t\r\n");
      out.write("\t<form name=\"form1\" method=\"post\" action=\"smyboard_control.jsp\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"action\" value=\"list\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"id\" value=0>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<table border=1>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=4 align=right>\r\n");
      out.write("    \t\t\t\t<input type=\"button\" value=\"조회\" onClick=\"retrivalcheck()\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t\t<th>성명</th>\r\n");
      out.write("\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				if(boardList != null) {
						for(smyboardDTO smyboardDTO : (ArrayList<smyboardDTO>) boardList) {
			
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href=\"javascript:editcheck(");
      out.print(smyboardDTO.getId() );
      out.write(')');
      out.write('"');
      out.write('>');
      out.print(smyboardDTO.getId() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(smyboardDTO.getUserName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(smyboardDTO.getTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(smyboardDTO.getContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");
	
					}
				}
			
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
