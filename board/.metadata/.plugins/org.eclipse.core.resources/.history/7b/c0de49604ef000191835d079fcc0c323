package org.smy.board;

import java.sql.*;
import java.util.ArrayList;

import org.smy.board.smyboardDTO;

public class smyboardDAO {

	Connection conn = null;
	PreparedStatement pstmt = null;

	String jdbc_driver = "com.mysql.jdbc.Driver";
	
	String jdbc_url = "jdbc:mysql://127.0.0.1/jspdb?useSSL=true&verifyServerCertificate=false&serverTimezone=UTC";
	
	/**
	 *
	 * @fn 		connect()
	 * 
	 * @brief 	DB 연결 메서드
	 *
	 * @author 	김설규
	 * @date 	2019-10-16
	 *
	 * @param 	jdbc_url,"jspbook","1234"
	 *
	 * @remark 	DB 연결을 위한 선언		[2019-10-16; 김설규]
	 * 
	 */
	void connect() {
		try {
			Class.forName(jdbc_driver);

			conn = DriverManager.getConnection(jdbc_url,"jspbook","1234");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 *
	 * @fn 		disconnect()
	 * 
	 * @brief 	DB 연결해제 메서드
	 *
	 * @author 	김설규
	 * @date 	2019-10-16
	 *
	 * @param 	null
	 *
	 * @remark 	DB 연결해제을 위한 선언		[2019-10-16; 김설규]
	 * 
	 */
	void disconnect() {
		if(pstmt != null) {
			try {
				pstmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		} 
		if(conn != null) {
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	/**
	 *
	 * @fn 		insertDB(smyboardDTO smyboardDTO)
	 * 
	 * @brief 	DB 입력을 위한 메서드
	 *
	 * @author 	김설규
	 * @date 	2019-10-16
	 *
	 * @param 	userName, title, content
	 *
	 * @remark 	DB 입력을 위한 선언		[2019-10-16; 김설규]
	 * 
	 */
	public boolean insertDB(smyboardDTO smyboardDTO) {
		
		connect();
		
			String sql ="insert into Board(userName, title, content) values(?,?,?)";		
		try {
			
			pstmt = conn.prepareStatement(sql);

			pstmt.setString(1,smyboardDTO.getUserName());
			pstmt.setString(2,smyboardDTO.getTitle());
			pstmt.setString(3,smyboardDTO.getContent());
			
			pstmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		finally {
			disconnect();
		}
		return true;
	}
	/**
	 *
	 * @fn 		ArrayList<smyboardDTO>
	 * 
	 * @brief 	DB 입력을 위한 메서드
	 *
	 * @author 	김설규
	 * @date 	2019-10-16
	 *
	 * @param 	userName, title, content
	 *
	 * @remark 	DB 입력을 위한 선언		[2019-10-16; 김설규]
	 * 
	 */
	public ArrayList<smyboardDTO> getDBList() {
		
		connect();
		
		ArrayList<smyboardDTO> boardList = new ArrayList<smyboardDTO>();
		
		String sql = "select id, userName, title, content from Board";

		try {
			
			pstmt = conn.prepareStatement(sql);
			
			//SQL臾� �떎�뻾
			ResultSet rs = pstmt.executeQuery();

			while(rs.next()) {
				
				// DO 媛앹껜 �깮�꽦
				smyboardDTO smyboardDTO = new smyboardDTO();
				
				// DB Select寃곌낵瑜� DO 媛앹껜�뿉 ���옣
				smyboardDTO.setId(rs.getInt("id"));
				smyboardDTO.setUserName(rs.getString("userName"));
				smyboardDTO.setTitle(rs.getString("title"));
				smyboardDTO.setContent(rs.getString("content"));

				boardList.add(smyboardDTO);
			}
			rs.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			disconnect();
		}
		return boardList;
	}

	/******************************************************************************************/
	// edit�슜 寃뚯떆�뙋 1嫄� 議고쉶 硫붿꽌�뱶
	/******************************************************************************************/
	public smyboardDTO getDB(int id) {
		
		connect();
		
		smyboardDTO smyboardDTO = new smyboardDTO();
		
		String sql = "select * from Board where id = ?";
		
		try {
			
			pstmt = conn.prepareStatement(sql);
			
			// SQL臾몄뿉 議고쉶議곌굔 �엯�젰
			pstmt.setInt(1,id);

			//SQL臾� �떎�뻾
			ResultSet rs = pstmt.executeQuery();

			// �뜲�씠�꽣媛� �븯�굹留� �엳�쑝誘�濡� rs.next()瑜� �븳踰덈쭔 �떎�뻾 �븳�떎.
			rs.next();
			
			// DB Select寃곌낵瑜� DO 媛앹껜�뿉 ���옣
			smyboardDTO.setId(rs.getInt("id"));
			smyboardDTO.setUserName(rs.getString("userName"));
			smyboardDTO.setTitle(rs.getString("title"));
			smyboardDTO.setContent(rs.getString("content"));
			
			rs.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			disconnect();
		}
		return smyboardDTO;
	}


	/******************************************************************************************/
	// 寃뚯떆�뙋 �닔�젙 硫붿꽌�뱶
	/******************************************************************************************/
	public boolean updateDB(smyboardDTO smyboardDTO) {
		
		
		connect();
		
		// id濡� 留ㅼ묶�븯�뿬 update(寃뚯떆�뙋�씪�옄�� 寃뚯떆�뙋湲덉븸留� �닔�젙 媛��뒫)				
		String sql ="update Board set userName=?, title=?, content=? where id=?";

		try {
			
			pstmt = conn.prepareStatement(sql);

			// SQL臾몄뿉 蹂��닔 �엯�젰
			pstmt.setString(1,smyboardDTO.getUserName());
			pstmt.setString(2,smyboardDTO.getTitle());
			pstmt.setString(3,smyboardDTO.getContent());
			pstmt.setInt(4,smyboardDTO.getId());
		
			//SQL臾� �떎�뻾
			pstmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		finally {
			disconnect();
		}
		return true;
	}
	
	
	/******************************************************************************************/
	// 寃뚯쥖�씠泥� �궘�젣 硫붿꽌�뱶
	/******************************************************************************************/
	public boolean deleteDB(int id) {
		
		
		connect();
		
		// id濡� 留ㅼ묶�븯�뿬 delete				
			String sql ="delete from Board where id=?";
		
		try {
			
			pstmt = conn.prepareStatement(sql);

			// SQL臾몄뿉 蹂��닔 �엯�젰
			pstmt.setInt(1,id);
						
			//SQL臾� �떎�뻾
			pstmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		finally {
		}
		return true;
	}
	
	
}